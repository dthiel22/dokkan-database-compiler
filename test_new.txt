CHARACTER MODEL
===============
id - cards.id
title - 
name -
rarity - 
type -
cost - 
leader_skill_description - 
super_attacks - 
passive_name - 
passive_description - 
active_skills - 
transformed - set true/false if transforms_from
transforms_to - find passive_skill_set_id using passive_skill_id in passive_skill_set_relations

use passive_skill_set_id in passive_skills.id to find eff_value1 === new character id

transforms_from - (if character ID is in transforms_to???)
standby_skills - use cards.id to find standby_skill_set_id in card_standby_skill_set_relations 
finish_skills - use cards.id to find finish_skill_set_id in card_finish_skill_set_relations
link_skills - SOLVED
categories - SOLVED
eza_information - cards.optimal_awakening_grow_type 

LEADER SKILL MODEL
==================
id - 
character_database_id - 

PASSIVE SKILL MODEL
===================
id - 
character_database_id - 

SUPER ATTACK MODEL
==================
id - 
character_database_id - 
type - 
name - 
description - 

ACTIVE SKILL MODEL
==================
id - 
character_database_id - 
name - 
description - 
condition - 

FINISH_ATTACK_MODEL
===================
id - 
character_database_id - 


STANDBY_SKILL_MODEL
===================
id - 
character_database_id - 

EZA INFORMATION MODEL
=====================
id - optimal_awakening_growths.optimal_awakening_grow_type
character_database_id - cards.id from cards.optimal_awakening_grow_type
passive_skill_description - optimal_awakening_growths.passive_skill_set_id (on step 7)
leader_skill_description -  optimal_awakening_growths.leader_skill_set_id (on step 7)

SKILL GROUP (skill_group_relations) //TODO:not needed for initial database
===========
type - skill_group_relations.target_type






- I think we split everything up, load it on page load, make the character dictionary, then render EVERYTHING based on that
- EZA information only changes the leader skill and passive skill...the super attacks are rendered separately